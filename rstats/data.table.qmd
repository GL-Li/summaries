## fread

### colClass
colClass can be a named vector that sepcify classes of selected columns. Unfortunately, it cannot override a higher type to a lower one. For example, if a column has characters, the column cannot be read into integer. So the colClass for this column is ignored.

Order of types in R: character > numeric > integer

If the higher to lower class reading is intended, do this after reading.

```{r}
library(data.table)
# a sample aaa.csv file
aaa <- utils::read.table(header = TRUE, text = "
 x y z t
 a 1 0 3.14
 b 2 0 1
")
fwrite(aaa, file = "aaa.csv")

col_class <- c(x = "numeric", y = "character", t = "integer")
aaa <- fread("aaa.csv", colClass = col_class)

# result
# - x is read into character. numeric class is ignored.
# - y is read into character "1", "2"
# - z is determined by fread function.
# - t is read into numeric, not integer

# forced conversion
for (col in names(col_class)) {
  if (class(aaa[[col]]) != col_class[col]) {
    if (col_class[col] == "numeric") {
      aaa[[col]] <- as.numeric(aaa[[col]])
    }
    if (col_class[col] == "integer") {
      aaa[[col]] <- as.integer(aaa[[col]])
    }
  }
}
```

## Join `dt2` to`dt1` inplace
Without copying data, join selected columns in `dt2` to `dt1`

```{r}
library(data.table)
dt1 <- data.table(
  id = 1:3,
  x = letters[1:3]
)
dt2 <- data.table(
  id = 1:3,
  y = LETTERS[1:3],
  z = rnorm(3),
  t = "qqqq"
)

# join y and z from dt2 to dt1 in place
dt1[
  dt2,
  on = "id", 
  ":=" (y = i.y, z = i.z)
]
  #       id      x      y          z
  #    <int> <char> <char>      <num>
  # 1:     1      a      A -1.0798453
  # 2:     2      b      B -0.5736653
  # 3:     3      c      C -0.7555166
```